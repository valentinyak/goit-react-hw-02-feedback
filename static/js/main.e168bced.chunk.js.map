{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","props","btnsArray","Object","keys","slice","total","positivePercentage","map","name","toUpperCase","shortid","generate","Math","round","FeedbackOptions","options","onLeaveFeedback","className","s","buttonList","type","statisticsBtn","onClick","Notification","message","App","state","good","neutral","bad","setState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAIe,SAASA,EAAWC,GACjC,IAAMC,EAAYC,OAAOC,KAAKH,GAAOI,MAAM,EAAG,GACtCC,EAA8BL,EAA9BK,MAAOC,EAAuBN,EAAvBM,mBAEf,OACE,gCACE,4CACA,+BACGL,EAAUM,KAAI,SAAAC,GAAI,OACjB,6BACGA,EAAKJ,MAAM,EAAG,GAAGK,cAChBD,EAAKJ,MAAM,GACX,KACAJ,EAAMQ,IAJDE,IAAQC,eAOnB,yCAAYN,KACZ,qDAAwBO,KAAKC,MAAMP,GAAnC,a,oBCfO,SAASQ,EAAgBd,GAAQ,IACtCe,EAA6Bf,EAA7Be,QAASC,EAAoBhB,EAApBgB,gBAEjB,OACE,gCACE,uDACA,oBAAIC,UAAWC,IAAEC,WAAjB,SACGJ,EAAQR,KAAI,SAAAC,GAAI,OACf,6BACE,wBACEY,KAAK,SACLH,UAAWC,IAAEG,cACbC,QAAS,WACPN,EAAgBR,IAJpB,SAOGA,EAAKJ,MAAM,EAAG,GAAGK,cAAgBD,EAAKJ,MAAM,MARxCM,IAAQC,oBCXZ,SAASY,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,8BACE,4BAAIA,M,IC+DKC,E,4MA9DbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAOPb,gBAAkB,SAAAR,GAChB,EAAKsB,SAAL,eAAiBtB,EAAO,EAAKkB,MAAMlB,GAAQ,K,EAG7CuB,mBAAqB,WACnB,OAAO7B,OAAO8B,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAC5C,OAAOD,EAAMC,M,EAIjBC,gCAAkC,WAChC,OAAkC,IAA9B,EAAKL,qBACA,EAEC,EAAKL,MAAMC,KAAO,EAAKI,qBAAwB,K,6DAjBzD,OAAO7B,OAAOC,KAAKkC,KAAKX,S,+BAqBhB,IAAD,EACwBW,KAAKX,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAErBH,EAIEW,KAJFX,MACAV,EAGEqB,KAHFrB,gBACAe,EAEEM,KAFFN,mBACAK,EACEC,KADFD,gCAGF,OACE,gCACE,cAACtB,EAAD,CACEC,QAASb,OAAOC,KAAKuB,GACrBV,gBAAiBA,IAKZ,IAFNd,OAAO8B,OAAON,GAAOO,QAAO,SAACC,EAAKC,GACjC,OAAOD,EAAMC,KAEb,cAACZ,EAAD,CAAcC,QAAQ,sBAEtB,cAACzB,EAAD,CACE4B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLxB,MAAO0B,IACPzB,mBAAoB8B,a,GAvDdE,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,cAAgB,0C","file":"static/js/main.e168bced.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nexport default function Statistics(props) {\n  const btnsArray = Object.keys(props).slice(0, 3);\n  const { total, positivePercentage } = props;\n\n  return (\n    <div>\n      <h1>Statistics</h1>\n      <ul>\n        {btnsArray.map(name => (\n          <li key={shortid.generate()}>\n            {name.slice(0, 1).toUpperCase() +\n              name.slice(1) +\n              ': ' +\n              props[name]}\n          </li>\n        ))}\n        <li>Total: {total}</li>\n        <li>Positive feedback: {Math.round(positivePercentage)}%</li>\n      </ul>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions(props) {\n  const { options, onLeaveFeedback } = props;\n\n  return (\n    <div>\n      <h1>Please leave feedback</h1>\n      <ul className={s.buttonList}>\n        {options.map(name => (\n          <li key={shortid.generate()}>\n            <button\n              type=\"button\"\n              className={s.statisticsBtn}\n              onClick={() => {\n                onLeaveFeedback(name);\n              }}\n            >\n              {name.slice(0, 1).toUpperCase() + name.slice(1)}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getStateKeys() {\n    return Object.keys(this.state);\n  }\n\n  onLeaveFeedback = name => {\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => {\n      return acc + value;\n    });\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    } else {\n      return (this.state.good / this.countTotalFeedback()) * 100;\n    }\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const {\n      state,\n      onLeaveFeedback,\n      countTotalFeedback,\n      countPositiveFeedbackPercentage,\n    } = this;\n\n    return (\n      <div>\n        <FeedbackOptions\n          options={Object.keys(state)}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n\n        {Object.values(state).reduce((acc, value) => {\n          return acc + value;\n        }) === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__23o4Y\",\"statisticsBtn\":\"FeedbackOptions_statisticsBtn__3MYHe\"};"],"sourceRoot":""}