{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","btnsArray","Object","keys","this","props","slice","map","name","toUpperCase","shortid","generate","total","Math","round","positivePercentage","Component","FeedbackOptions","options","onLeaveFeedback","className","s","buttonList","type","statisticsBtn","onClick","Notification","message","App","state","good","neutral","bad","setState","values","reduce","acc","value","countTotalFeedback","bind","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRA8BeA,E,uKAzBH,IAAD,OACDC,EAAYC,OAAOC,KAAKC,KAAKC,OAAOC,MAAM,EAAG,GAEnD,OACE,gCACE,4CACA,+BACGL,EAAUM,KAAI,SAAAC,GAAI,OACjB,6BACGA,EAAKF,MAAM,EAAG,GAAGG,cAChBD,EAAKF,MAAM,GACX,KACA,EAAKD,MAAMG,IAJNE,IAAQC,eAOnB,yCAAYP,KAAKC,MAAMO,SACvB,qDACsBC,KAAKC,MAAMV,KAAKC,MAAMU,oBAD5C,iB,GAjBeC,a,gBC6BVC,E,uKA1BH,IAAD,EAC8Bb,KAAKC,MAAlCa,EADD,EACCA,QAASC,EADV,EACUA,gBAEjB,OACE,gCACE,uDACA,oBAAIC,UAAWC,IAAEC,WAAjB,SACGJ,EAAQX,KAAI,SAAAC,GAAI,OACf,6BACE,wBACEe,KAAK,SACLH,UAAWC,IAAEG,cACbC,QAAS,WACPN,EAAgBX,IAJpB,SAOGA,EAAKF,MAAM,EAAG,GAAGG,cAAgBD,EAAKF,MAAM,MARxCI,IAAQC,wB,GATCK,aCHf,SAASU,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,8BACE,4BAAIA,M,ICyDKC,E,4MAxDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,6DAIL,OAAO9B,OAAOC,KAAKC,KAAKyB,S,sCAGVrB,GACdJ,KAAK6B,SAAL,eAAiBzB,EAAOJ,KAAKyB,MAAMrB,GAAQ,M,2CAI3C,OAAON,OAAOgC,OAAO9B,KAAKyB,OAAOM,QAAO,SAACC,EAAKC,GAC5C,OAAOD,EAAMC,O,wDAKf,OAAkC,IAA9BjC,KAAKkC,qBACA,EAEClC,KAAKyB,MAAMC,KAAO1B,KAAKkC,qBAAwB,M,+BAIjD,IAAD,EACwBlC,KAAKyB,MAA5BC,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,gCACE,cAAC,EAAD,CACEd,QAAShB,OAAOC,KAAKC,KAAKyB,OAC1BV,gBAAiBf,KAAKe,gBAAgBoB,KAAKnC,QAKtC,IAFNF,OAAOgC,OAAO9B,KAAKyB,OAAOM,QAAO,SAACC,EAAKC,GACtC,OAAOD,EAAMC,KAEb,cAACX,EAAD,CAAcC,QAAQ,sBAEtB,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLpB,MAAOR,KAAKkC,qBACZvB,mBAAoBX,KAAKoC,2C,GAjDnBxB,aCDlByB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,WAAa,oCAAoC,cAAgB,0C","file":"static/js/main.90e9bd0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nclass Statistics extends Component {\n  render() {\n    const btnsArray = Object.keys(this.props).slice(0, 3);\n\n    return (\n      <div>\n        <h1>Statistics</h1>\n        <ul>\n          {btnsArray.map(name => (\n            <li key={shortid.generate()}>\n              {name.slice(0, 1).toUpperCase() +\n                name.slice(1) +\n                ': ' +\n                this.props[name]}\n            </li>\n          ))}\n          <li>Total: {this.props.total}</li>\n          <li>\n            Positive feedback: {Math.round(this.props.positivePercentage)}%\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport s from './FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n\n    return (\n      <div>\n        <h1>Please leave feedback</h1>\n        <ul className={s.buttonList}>\n          {options.map(name => (\n            <li key={shortid.generate()}>\n              <button\n                type=\"button\"\n                className={s.statisticsBtn}\n                onClick={() => {\n                  onLeaveFeedback(name);\n                }}\n              >\n                {name.slice(0, 1).toUpperCase() + name.slice(1)}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Notification({ message }) {\n  return (\n    <div>\n      <p>{message}</p>\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getStateKeys() {\n    return Object.keys(this.state);\n  }\n\n  onLeaveFeedback(name) {\n    this.setState({ [name]: this.state[name] + 1 });\n  }\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce((acc, value) => {\n      return acc + value;\n    });\n  }\n\n  countPositiveFeedbackPercentage() {\n    if (this.countTotalFeedback() === 0) {\n      return 0;\n    } else {\n      return (this.state.good / this.countTotalFeedback()) * 100;\n    }\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.onLeaveFeedback.bind(this)}\n        />\n\n        {Object.values(this.state).reduce((acc, value) => {\n          return acc + value;\n        }) === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__23o4Y\",\"statisticsBtn\":\"FeedbackOptions_statisticsBtn__3MYHe\"};"],"sourceRoot":""}